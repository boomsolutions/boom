@model MvcApplication4.Models.Productos

@{
    ViewBag.Title = "HOME/INDEX";
    
}
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function AgregarFileUploader()
    {
        var cant = document.getElementById("DIVSubirFotos").childElementCount - 2;

        //htmltext = "<input id='ImageUpload" + cant + "' name='ImageUpload" + cant + "' type='file' value=''>";
        htmltext = "<input id='ImageUpload' name='ImageUpload' type='file' value=''>";
        //htmltext = htmltext + "<span class='field-validation-valid' data-valmsg-for='ImageUpload' data-valmsg-replace='true'></span>";
        input = document.createElement("input");
        document.getElementById("DIVSubirFotos").appendChild(input);
        input.outerHTML = htmltext;
        /*var newimage = document.createElement("input");
        newimage.outerHTML = htmltext;
        document.getElementById("ImageUpload").appendChild(newimage);
        */
    }

    function onDeleteSuccess(link)
    {
        link.parentElement.remove();
        //alert(result);
    }

    function MostrarPrecioEnvio(cb) {
        document.getElementById('DIVPrecioEnvio').hidden = (cb.checked == false);
        document.getElementById('DIVComentarioEnvio').hidden = (cb.checked == false);
    }

    function CambioDeptos(depto) {
        document.getElementById('DIVBarrio').hidden = true;
        if ($("#IdDepartamento").val() == "10") {
            document.getElementById('DIVBarrio').hidden = false;
        }
        return false;
    }
</script>


    <!-- Google Tag Manager -->
    <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TWFS7T"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <script>(function (w, d, s, l, i) {
    w[l] = w[l] || []; w[l].push({
        'gtm.start':
        new Date().getTime(), event: 'gtm.js'
    }); var f = d.getElementsByTagName(s)[0],
    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
    '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-TWFS7T');</script>
    <!-- End Google Tag Manager -->

<div class="wrapper">

<!-- ============================================================= TOP NAVIGATION ============================================================= -->
<!-- ============================================================= TOP NAVIGATION : END ============================================================= -->
<!-- ============================================================= HEADER ============================================================= -->

<!-- ============================================================= HEADER : END ============================================================= -->
@*<div class="animate-dropdown"><!-- ========================================= BREADCRUMB ========================================= -->
<div id="top-mega-nav">
    <div class="container">
        <nav>
            <ul class="inline">
                <li class="dropdown le-dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        <i class="fa fa-list"></i> Shop by Department
                    </a>
                    <ul class="dropdown-menu">
                        <li><a href="#">Computer Cases &amp; Accessories</a></li>
                        <li><a href="#">CPUs, Processors</a></li>
                        <li><a href="#">Fans, Heatsinks &amp; Cooling</a></li>
                        <li><a href="#">Graphics, Video Cards</a></li>
                        <li><a href="#">Interface, Add-On Cards</a></li>
                        <li><a href="#">Laptop Replacement Parts</a></li>
                        <li><a href="#">Memory (RAM)</a></li>
                        <li><a href="#">Motherboards</a></li>
                        <li><a href="#">Motherboard &amp; CPU Combos</a></li>
                        <li><a href="#">Motherboard Components</a></li>
                    </ul>
                </li>

                <li class="breadcrumb-nav-holder"> 
                    <ul>
                        <li class="breadcrumb-item current gray">
                            <a href="#">Publicar</a>
                        </li>
                    </ul>
                </li><!-- /.breadcrumb-nav-holder -->
            </ul>
        </nav>
    </div><!-- /.container -->
</div><!-- /#top-mega-nav -->
<!-- ========================================= BREADCRUMB : END ========================================= --></div>*@     
    <!-- ========================================= CONTENT ========================================= -->

<section id="checkout-page">
    <div class="container">
        <div class="col-xs-12 no-margin">
            
            <div class="billing-address">
                <h2 class="border h1">Editar Publicación</h2>
                @using (Html.BeginForm("EditProduct", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    
                    //Html.Hidden("IdProducto",Model.IdProducto)
                    @Html.Hidden("IdProductoEncrypt",HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdProducto.ToString())))

                    <div class="row field-row">
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.IdTipoProducto, "Tipo de Publicación")
                            @Html.DropDownList("IdTipoProducto", null, new { @class = "le-input" })
                            @Html.ValidationMessageFor(model => model.IdTipoProducto)
                        </div>
                    </div><!-- /.field-row -->
                    
                    <div class="row field-row">
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.IdCategoriaProducto, "Categoria")
                            @Html.DropDownList("IdCategoriaProducto", null, new { @class = "le-input" })
                            @Html.ValidationMessageFor(model => model.IdCategoriaProducto)
                        </div>
                    </div><!-- /.field-row -->
                    
                    <div class="row field-row">
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.Nombre, "Titulo")
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "le-input", placeholder = "Nombre" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div><!-- /.field-row -->

                    <div class="row field-row">
                        <div class="col-xs-12">

                            @Html.LabelFor(model => model.Descripcion, "Descripcion")
                            @Html.TextAreaFor(model => model.Descripcion, new { @class = "le-input" })
                            @Html.ValidationMessageFor(model => model.Descripcion)
                        </div>
                    </div><!-- /.field-row -->

                    
                    
    
                    <div class="row field-row">
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.IdMoneda, "Moneda")
                            @Html.DropDownList("IdMoneda", null, new { @class = "le-input" })
                            @Html.ValidationMessageFor(model => model.IdMoneda)
                        </div>
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.PrecioHora, "Precio hora")
                            @Html.TextBoxFor(model => model.PrecioHora, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioHora)
                            
                        </div>
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.PrecioDiario, "Precio diario")
                            @Html.TextBoxFor(model => model.PrecioDiario, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioDiario)
                        </div>
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.PrecioSemanal, "Precio semanal")
                            @Html.TextBoxFor(model => model.PrecioSemanal, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioSemanal)
                        </div>
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.PrecioFinDeSemana, "Precio fin de semana")
                            @Html.TextBoxFor(model => model.PrecioFinDeSemana, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioFinDeSemana)
                        </div>
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.PrecioMensual, "Precio mensual")
                            @Html.TextBoxFor(model => model.PrecioMensual, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioMensual)
                        </div>
                    </div><!-- /.field-row -->
                    
                    <div class="row field-row">
                        <div class="col-xs-12 col-sm-2">
                            Selecciona el precio que se verá en la página principal:
                        </div>
                        
                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.MostrarPrecioHora, " ")
                            
                            @Html.CheckBoxFor(model => model.MostrarPrecioHora, new { @class = "le-checkbox big" })
                            
                         </div>

                        <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.MostrarPrecioDiario, " ")
                            
                            @Html.CheckBoxFor(model => model.MostrarPrecioDiario, new { @class = "le-checkbox big" })
                            
                         </div>
                       
                         <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.MostrarPrecioSemanal, " ")
                            
                            @Html.CheckBoxFor(model => model.MostrarPrecioSemanal, new { @class = "le-checkbox big" })
                            
                         </div>
                        
                         <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.MostrarPrecioFinDeSemana, " ")
                            
                            @Html.CheckBoxFor(model => model.MostrarPrecioFinDeSemana, new { @class = "le-checkbox big" })
                            
                         </div>
                         <div class="col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.MostrarPrecioMensual, " ")
                            
                            @Html.CheckBoxFor(model => model.MostrarPrecioMensual, new { @class = "le-checkbox big" })
                            
                         </div>
                    </div><!-- /.field-row -->
                    
                    @*<div class="row field-row">
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.IdMoneda, "Moneda")
                            @Html.DropDownList("IdMoneda", null, new { @class = "le-input"})
                            @Html.ValidationMessageFor(model => model.IdMoneda)
                        </div>
                    </div><!-- /.field-row -->
                    *@
                    
                    <div class="row field-row">
                        <div class="col-xs-12">
                        @Html.LabelFor(model => model.GarantiaDinero, "Garantía")
                        @Html.TextBoxFor(model => model.GarantiaDinero, new { @class = "le-input" })
                        @Html.ValidationMessageFor(model => model.GarantiaDinero)
                        </div>
                    </div><!-- /.field-row -->
                        

                    <div class="row field-row">
                        <div class="col-xs-12">
                        @Html.LabelFor(model => model.GarantiaExtra, "Requisitos")
                        @Html.TextAreaFor(model => model.GarantiaExtra, new { @class = "le-input" })
                        @Html.ValidationMessageFor(model => model.GarantiaExtra)
                        </div>
                    </div><!-- /.field-row -->
                    

                    <div class="row field-row">
                        <div class="col-xs-12">
                        @Html.LabelFor(model => model.CondicionesUso, "Condiciones de uso")
                        @Html.TextAreaFor(model => model.CondicionesUso, new { @class = "le-input" })
                        @Html.ValidationMessageFor(model => model.CondicionesUso)
                        </div>
                    </div><!-- /.field-row -->
                        
                     <div class="row field-row">
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.IdDepartamento, "Departamento")
                            @Html.DropDownList("IdDepartamento", null, new { @class = "le-input", onchange = "javascript:CambioDeptos(this);" })
                            @Html.ValidationMessageFor(model => model.IdDepartamento)
                        </div>
                    </div><!-- /.field-row -->
                    
                    if(Model.IdDepartamento.Value == 10)
                    {
                     <div class="row field-row" id="DIVBarrio" >
                        <div class="col-xs-12">
                            @Html.LabelFor(model => model.IdBarrio, "Barrio")
                            @Html.DropDownList("IdBarrio", null, new { @class = "le-input" })
                            @Html.ValidationMessageFor(model => model.IdBarrio)
                        </div>
                    </div><!-- /.field-row -->
                    }
                    <div class="row field-row">
                        <div class="col-xs-12">
                            
                            @Html.CheckBoxFor(model => model.ConEnvio, new { @class = "le-checkbox big", onclick = "javascript:MostrarPrecioEnvio(this);" })
                            Con Envio?
                            @*@Html.LabelFor(model => model.ConEnvio, "Con Envio?")
                            *@
                            
                            @Html.ValidationMessageFor(model => model.ConEnvio)
                            
                            <div id="DIVPrecioEnvio" hidden="true">
                                @Html.LabelFor(model => model.PrecioEnvio, "Precio de envío")
                                @Html.TextBoxFor(model => model.PrecioEnvio, new { @class = "le-input" })
                                @Html.ValidationMessageFor(model => model.PrecioEnvio)
                                <div>
                                Si deja este campo vacio el precio será "A convenir".
                                </div>
                            </div>
                             
                            <br/>
                            <div id="DIVComentarioEnvio" hidden="true">
                                @Html.LabelFor(model => model.ComentarioEnvio, "Comentario de envío")
                                @Html.TextAreaFor(model => model.ComentarioEnvio, new { @class = "le-input" })
                            </div>
                        </div>
                    </div><!-- /.field-row -->
                    
                    
                    <!--<div class="row field-row">
                        <div class="col-xs-12">-->
                        @*@Html.LabelFor(model => model.IdUsuario, "Usuarios")*@
                        @*@Html.DropDownList("IdUsuario", null, new { @class = "le-input"})*@
                    
                    //Html.Hidden("IdUsuario",Model.IdUsuario)
                    //Html.Hidden("IdUsuario",HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdUsuario.ToString())))
                    //Html.Hidden("IdEstadoProducto",Model.IdEstadoProducto)
                    
                   //Html.Hidden("IdEstadoProducto",HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdUsuario.ToString())))
                    
                        @*@Html.ValidationMessageFor(model => model.IdUsuario)*@
                        <!--</div>
                    </div>--><!-- /.field-row -->
                    
                    @*{ ViewBag.FotosProductosBAK = Model.FotosProductos; }*@
                    
                    if (Model.FotosProductos != null)
                    {
                        foreach (MvcApplication4.Models.FotoProductos fp in Model.FotosProductos.ToList())
                        {
                        
                    
                            <div id="DIVBORRAR" class="thumb-holder">
                            @Ajax.ActionLink(
                                " ",
                                "DeleteFotoConfirmed",
                                "Home",
                                new
                                {
                                    id = HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(fp.IdFotoProducto.ToString()))
                                },
                                new AjaxOptions
                                {
                                    HttpMethod = "POST"
                                }, new { onclick = "javascipt:onDeleteSuccess(this)", @class = "fa fa-times-circle" }
                            )       
                        
                                @if (String.IsNullOrEmpty(fp.Imagen.RutaFotoThumb))
                                {
                                    <img alt="Foto" src="@Url.Content(fp.Imagen.RutaFoto)" height="100" />
                                
                                }
                                else
                                {
                                    <img alt="Foto" src="@Url.Content(fp.Imagen.RutaFotoThumb)" height="100" />
                                }
                            </div>
                                    @*@Html.ActionLink("d", "DeleteFotoConfirmed", "Home", new { id=fp.IdFotoProducto }, new { @class = "close-btn" })*@
                            @*}*@
                        }
                    }
                    <div class="row field-row">
                        <div class="col-xs-12" id="DIVSubirFotos">
                            @Html.Label("ImageUpload", "Subir Fotos")
                            @Html.TextBox("ImageUpload", String.Empty, new { type = "file" })
                            
                            @Html.ValidationMessage("ImageUpload")
                        </div>
                        <div class="col-xs-12" >
                        <a href="javascript:AgregarFileUploader();">Mas fotos...</a>
                            </div>
                    </div>  
                    <!--
                    <div class="place-order-button">
                        <button class="le-button big">place order</button>
                    </div> place-order-button -->
                    
                    <div class="place-order-button">
                        <input class="le-button big" type="submit" value="Aceptar cambios" />
                    </div>
                }
            </div><!-- /.billing-address -->

        </div><!-- /.col -->
    </div><!-- /.container -->    
</section><!-- /#checkout-page -->
<!-- ========================================= CONTENT : END ========================================= -->      
<!-- ============================================================= FOOTER ============================================================= -->
