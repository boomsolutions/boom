@model MvcApplication4.Models.Productos

@{
    ViewBag.Title = "HOME/INDEX";
    
}


<script type="text/javascript">

    cantImagenesSeleccionadas = 0;

    function AgregarFileUploader() {
        /*
        var cant = document.getElementById("DIVSubirFotos").childElementCount - 2;
        htmltext = "<input id='ImageUpload' name='ImageUpload' type='file' value='' onchange='javascript:CargarPreview(this);'><img id='preview' class='image-preview' src>";
        input = document.createElement("input");
        document.getElementById("DIVSubirFotos").appendChild(input);
        input.outerHTML = htmltext;*/

        

        var divAClonar = document.getElementById("DIVSubirFotos");
        var divParent = document.getElementById("DIVSubirFotos").parentNode;
        var div = document.createElement("div");
        
        divParent.appendChild(div);
        div.outerHTML = divAClonar.outerHTML;
        //div.

        var divClonado = document.getElementById("DIVSubirFotos").parentNode.childNodes[document.getElementById("DIVSubirFotos").parentNode.childNodes.length - 1];

        divClonado.childNodes[1].setAttribute("class", "fileinput fileinput-new"); //la seteo como nueva
        divClonado.childNodes[1].childNodes[1].innerHTML = ""
    }

    /*
    function BorrarFileUploader()
    {
        //alert("BORRO EL VACIO");
    }
    */

    function VerificarImagen(iu)
    {
        //alert($('[class="fileinput fileinput-exists"]').size());
        
        
        if ($('[class="fileinput fileinput-exists"]').size() >= 2)
        {
            if (iu.value == "") //SE BORRO
            {
                if ($('[class="fileinput fileinput-new"]').size() == 2) {
                    iu.parentNode.parentNode.parentNode.parentNode.remove();
                }
            }
            else
            {
                
                AgregarFileUploader();
            }
        
        }

        //cantImagenesSeleccionadas = $('[class="fileinput fileinput-exists"]').size() + 1;
    }

    /*
    function BorrarImagen(btBorrar)
    {
        if ($('[class="fileinput fileinput-exists"]').size() >= 2) {
            //cantImagenesSeleccionadas = $('[class="fileinput fileinput-exists"]').size();
            BorrarFileUploader();
        }
    }
    */
    function MostrarPrecioEnvio(cb) {
        document.getElementById('DIVPrecioEnvio').hidden = (cb.checked == false);
        document.getElementById('DIVComentarioEnvio').hidden = (cb.checked == false);
    }

    function CambioDeptos(depto) {
        document.getElementById('DIVBarrio').hidden = true;
        if ($("#IdDepartamento").val() == "10") {
            document.getElementById('DIVBarrio').hidden = false;
        }
        return false;
    }

    var pos = 0;

    function CargarPreview(file) {
        //file.parentNode.getElementById('preview').src = file.value;
        //file.parentNode.getElementsByTagName("img")[0].src = file.value;

        var reader = new FileReader();

        reader.onload = function (e) {
            //$('#blah').attr('src', e.target.result);
            file.parentNode.getElementsByTagName("img")[pos].style = "background-image:url(" + e.target.result + ")"; // file.value;
            //file.parentNode.getElementsByTagName("img")[pos].src = e.target.result;
            pos = pos + 1;
        }

        reader.readAsDataURL(file.files[0]);
    }

    function RotarImagen(link) {
        link.parentNode.getElementsByTagName('input')[1].value = file.parentNode.getElementById('rotation').value + 1;
    }

    function CheckOnlyOne(chk)
    {
        document.getElementsByClassName("le-checkbox")[0].checked = false;
        document.getElementsByClassName("le-checkbox")[1].checked = false;
        document.getElementsByClassName("le-checkbox")[2].checked = false;
        document.getElementsByClassName("le-checkbox")[3].checked = false;
        document.getElementsByClassName("le-checkbox")[4].checked = false;

        chk.checked = true;
    }

</script>

<!-- Google Tag Manager -->
    <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TWFS7T"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <script>(function (w, d, s, l, i) {
    w[l] = w[l] || []; w[l].push({
        'gtm.start':
        new Date().getTime(), event: 'gtm.js'
    }); var f = d.getElementsByTagName(s)[0],
    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
    '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-TWFS7T');</script>
    <!-- End Google Tag Manager -->

<!-- BEGIN BODY REAL -->
    <div class="container" >        
       @*<div class="row top-backimage">
       		<div class="col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2 col-sm-12 col-xs-12">
            	
       		</div>
       </div>*@
       <div class="row">
       		<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
            	<h2>Nueva Publicación</h2>
            </div>
       </div>
       <hr>
     <div class="row">
        <div class="col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2 col-sm-12 col-xs-12">
            @using (Html.BeginForm("CreateProduct", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                @Html.ValidationSummary(true)
                    </div>
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                    @Html.LabelFor(model => model.IdCategoriaProducto, "Categoría")
                    @Html.DropDownList("IdCategoriaProducto", null, new { @class = "le-input" })
                    @Html.ValidationMessageFor(model => model.IdCategoriaProducto)
                    <!--
                <label>Categoria</label><br>
                <select class="le-input">
                	<option>Cat1</option>
                	<option>Cat2</option>
                </select>-->
                    </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                @*<label>Nombre de la publicacion</label><br>*@
                    @Html.LabelFor(model => model.Nombre, "Nombre de la publicacion")
                    
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "le-input", placeholder = "Nombre" })
                    @Html.ValidationMessageFor(model => model.Nombre)
            
                </div>
                </div>
                <div class="row margin-top">
                
                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <label for="IdMoneda">Moneda</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Selecciona en que moneda se verán tus precios."></i>
                    <br>
                    @Html.DropDownList("IdMoneda", null, new { @class = "le-input" })
                    @Html.ValidationMessageFor(model => model.IdMoneda)
                    
                </div>
                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <label for="preciohora">Precio por hora</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el precio de alquiler por hora."></i>
                    <br>
                    
                    @*@Html.DropDownList("IdMoneda", null, new { @class = "le-input" })
                    @Html.ValidationMessageFor(model => model.IdMoneda)
                    *@<!--<select class="le-input">
                        <option>U$D</option>
                        <option>$</option>
                    </select>-->
                    @Html.TextBoxFor(model => model.PrecioHora, new { @class = "le-input", type = "number" })
                    @Html.ValidationMessageFor(model => model.PrecioHora)
                    <!--<input type="number" class="le-input" />-->
                    @Html.CheckBoxFor(model => model.MostrarPrecioHora, new { @class = "le-checkbox big", onchange = "CheckOnlyOne(this)" })
                    <i class="fa fa-info-circle" aria-hidden="true" data-toggle="tooltip" title="Si seleccionas esta casilla, este precio se verá en la página principal."></i>
                    @Html.ValidationMessageFor(model => model.MostrarPrecioHora)
                </div>
                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <label for="preciodia">Precio por día</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el precio de alquiler por día."></i>
                    <br>
                    
                    @*<select class="le-input">
                        <option>U$D</option>
                        <option>$</option>
                    </select>*@
                    @Html.TextBoxFor(model => model.PrecioDiario, new { @class = "le-input", type = "number" })
                            @Html.ValidationMessageFor(model => model.PrecioDiario)
                    
                    @Html.CheckBoxFor(model => model.MostrarPrecioDiario, new { @class = "le-checkbox big", @checked = "true", onchange = "CheckOnlyOne(this)" })
                    <i class="fa fa-info-circle" aria-hidden="true" data-toggle="tooltip" title="Si seleccionas esta casilla, este precio se verá en la página principal."></i>
                            @Html.ValidationMessageFor(model => model.MostrarPrecioDiario)
                </div>
                
                <div class="col-lg-4">

                </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <label for="preciohora">Fin de semana (3 días)</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el precio de alquiler por fin de semana."></i>
                    <br>
                @*<select class="le-input">
                	<option>U$D</option>
                	<option>$</option>
                </select>*@
                @Html.TextBoxFor(model => model.PrecioFinDeSemana, new { @class = "le-input", type = "number" })
                @Html.ValidationMessageFor(model => model.PrecioFinDeSemana)
                @Html.CheckBoxFor(model => model.MostrarPrecioFinDeSemana, new { @class = "le-checkbox big", onchange = "CheckOnlyOne(this)" })
                    <i class="fa fa-info-circle" aria-hidden="true" data-toggle="tooltip" title="Si seleccionas esta casilla, este precio se verá en la página principal."></i>
                            @Html.ValidationMessageFor(model => model.MostrarPrecioFinDeSemana)
                </div>
                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <label for="preciodia">Semana (7 dias)</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el precio de alquiler por semana."></i>
                    <br>
               @* <select class="le-input">
                	<option>U$D</option>
                	<option>$</option>
                </select>*@
                @Html.TextBoxFor(model => model.PrecioSemanal, new { @class = "le-input", type = "number" })
                @Html.ValidationMessageFor(model => model.PrecioSemanal)
                @Html.CheckBoxFor(model => model.MostrarPrecioSemanal, new { @class = "le-checkbox big", onchange = "CheckOnlyOne(this)" })
                    <i class="fa fa-info-circle" aria-hidden="true" data-toggle="tooltip" title="Si seleccionas esta casilla, este precio se verá en la página principal."></i>
                            @Html.ValidationMessageFor(model => model.MostrarPrecioSemanal)
                </div>
                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <label for="preciodia">Mes (30 dias)</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el precio de alquiler por mes."></i>
                    <br>
                @*<select class="le-input">
                	<option>U$D</option>
                	<option>$</option>
                </select>*@
                @Html.TextBoxFor(model => model.PrecioMensual, new { @class = "le-input", type = "number" })
                @Html.ValidationMessageFor(model => model.PrecioMensual)
                @Html.CheckBoxFor(model => model.MostrarPrecioMensual, new { @class = "le-checkbox big", onchange = "CheckOnlyOne(this)" })
                    <i class="fa fa-info-circle" aria-hidden="true" data-toggle="tooltip" title="Si seleccionas esta casilla, este precio se verá en la página principal."></i>
                @Html.ValidationMessageFor(model => model.MostrarPrecioMensual)
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                	<p style="color: red;">
                    * Selecciona el precio que se verá en la página principal.
                    </p>
                </div>
                
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                <!--<label>Descripcion del producto</label><br>
                <textarea rows="5" class="le-input"></textarea>-->
                    @Html.LabelFor(model => model.Descripcion, "Descripción (No se permiten datos personales)")
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "le-input", rows="5" })
                    @Html.ValidationMessageFor(model => model.Descripcion)

                </div>
                @*<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                    <label>Valor declarado del producto</label><br>
                
                    @Html.TextBoxFor(model => model.PrecioDeclarado, new { @class = "le-input", type = "number",placeholder="$"  })
                    @Html.ValidationMessageFor(model => model.PrecioDeclarado)
                </div>*@
                
                
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                <label>Deposito de Garantía</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa el monto a depositar como garantía por extravio o ruptura."></i>
                    <br>
               
                    @Html.TextBoxFor(model => model.GarantiaDinero, new { @class = "le-input", type = "number"  })
                    @Html.ValidationMessageFor(model => model.GarantiaDinero)
                </div>
               
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                <label>Requisitos</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa los requisitos que pides al usuario para poder alquilar tu art&iacute;culo (C.I., Constancia de domicilio, etc)"></i>
                    <br>
                    @Html.TextAreaFor(model => model.GarantiaExtra, new { @class = "le-input", rows="2" })
                    @Html.ValidationMessageFor(model => model.GarantiaExtra)
                </div>
                 <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                <label>Condiciones de uso</label>
                     <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Ingresa las condiciones de uso para que los usuarios sepan sobre el artículo."></i>
                     <br>
                
                
                    @Html.TextAreaFor(model => model.CondicionesUso, new { @class = "le-input", rows="2" })
                    @Html.ValidationMessageFor(model => model.CondicionesUso)
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                <label>Opciones de entrega / recogida</label><br>
                <input type="radio" name="OpcionEntrega" value="1" checked/> Te lo puedo enviar
                <br /><input type="radio" name="OpcionEntrega" value="2" /> Lo recoges en mi casa
                <br /><input type="radio" name="OpcionEntrega" value="3" /> Quedamos en un sitio publico
                
				
                </div>
                
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                    <label>UBICACIÓN (Calle, Barrio, Ciudad)</label>
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="La UBICACIÓN mostrara en el mapa cerca de qué punto se encuentra tu publicación."></i><br>
                    <!--<input type="text"  class="le-input"/>-->
                    @Html.TextBoxFor(model => model.Ubicacion, new { @class = "le-input", placeholder="Ubicacion"  })
                    <br>
                    <input type="button" value="Actualizar MAPA" onclick="javascript: ActualizarMapa();" class="le-button"/>
                    <!-- CLAVE: AIzaSyAKJlp6uYU3DxZ6WtbR2RsGrXjGdQe93VY -->

                    <div class="product-map margin-top"> <!-- mapa del producto o mapa del usuario????? -->    
                        
                        
                        @*<div id="map_canvas" style="width:100%; height:300px"></div>*@

                                
                        <script src='https://maps.googleapis.com/maps/api/js?v=3.exp'></script>
                        <div style='overflow:hidden;height:176px;width:100%;'>
                            <div id='gmap_canvas' style='height:176px;width:100%;'>
                            </div>
                            <div>
                                <small>
                                    <a href="http://embedgooglemaps.com">									embed google maps							</a>
                                </small>
                            </div>
                            <div>
                                <small>
                                    <a href="http://www.proxysitereviews.com/">proxies</a>
                                </small>
                            </div>
                            <style>#gmap_canvas img{max-width:none!important;background:none!important}</style>
                        </div>
                        <script type='text/javascript'>
                            var map;
                            var markers = [];

                            function init_map()
                            {
                                var geocoder = new google.maps.Geocoder();

                                //map.setOptions({draggable: false, zoomControl: false, scrollwheel: false, disableDoubleClickZoom: true});

                                var myOptions = {
                                    zoom: 10,
                                    zoomControl: true,
                                    draggable: true,
                                    disableDoubleClickZoom: true,
                                    center: new google.maps.LatLng(-34.8484076, -56.24250030000002),
                                    mapTypeId: google.maps.MapTypeId.ROADMAP
                                };
                                map = new google.maps.Map(document.getElementById('gmap_canvas'), myOptions);


                                var address = "Montevideo, Uruguay";//document.getElementById('txtBuscar').value;

                                geocoder.geocode({ 'address': address }, function (results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {
                                        if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                            map.setCenter(results[0].geometry.location);

                                            var infowindow = new google.maps.InfoWindow(
                                                {
                                                    content: '<b>' + address + '</b>',
                                                    size: new google.maps.Size(150, 50)
                                                });

                                            var marker = new google.maps.Marker({
                                                position: results[0].geometry.location,
                                                map: map,
                                                title: address
                                            });
                                            markers.push(marker);
                                            google.maps.event.addListener(marker, 'click', function () {
                                                infowindow.open(map, marker);
                                            });
                                            infowindow.open(map, marker);

                                        } else {
                                            alert("¡No se pudo encontrar la ubicación ingresada!");
                                        }
                                    } else {
                                        alert("¡No se pudo encontrar la ubicación ingresada!");
                                            /*Geocode was not successful for the following reason: " + status*/
                                    }
                                });

                                /*
                                marker = new google.maps.Marker({ map: map, position: new google.maps.LatLng(-34.8484076, -56.24250030000002) });
                                infowindow = new google.maps.InfoWindow({content:'<strong>Mario</strong><br>Cordobes 329, Montevideo, Uruguay<br>'});
                                google.maps.event.addListener(marker, 'click', function(){
                                    infowindow.open(map,marker);
                                });
                                infowindow.open(map,marker);*/
                            }

                            function ActualizarMapa()
                            {
                                deleteMarkers();

                                var geocoder = new google.maps.Geocoder();

                                var address = document.getElementById('Ubicacion').value; //"Cerro, Montevideo, Uruguay";//document.getElementById('txtBuscar').value;

                                if (address != "") {
                                    geocoder.geocode({ 'address': address }, function (results, status) {
                                        if (status == google.maps.GeocoderStatus.OK) {
                                            if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                                map.setCenter(results[0].geometry.location);

                                                var infowindow = new google.maps.InfoWindow(
                                                    {
                                                        content: '<b>' + address + '</b>',
                                                        size: new google.maps.Size(150, 50)
                                                    });

                                                var marker = new google.maps.Marker({
                                                    position: results[0].geometry.location,
                                                    map: map,
                                                    title: address
                                                });
                                                markers.push(marker);
                                                google.maps.event.addListener(marker, 'click', function () {
                                                    infowindow.open(map, marker);
                                                });
                                                infowindow.open(map, marker);

                                            } else {
                                                alert("No results found");
                                            }
                                        } else {
                                            alert("Geocode was not successful for the following reason: " + status);
                                        }
                                    });
                                }
                            }

                            // Sets the map on all markers in the array.
                            function setMapOnAll(map) {
                                for (var i = 0; i < markers.length; i++) {
                                    markers[i].setMap(map);
                                }
                            }

                            // Removes the markers from the map, but keeps them in the array.
                            function clearMarkers() {
                                setMapOnAll(null);
                            }

                            // Shows any markers currently in the array.
                            function showMarkers() {
                                setMapOnAll(map);
                            }

                            // Deletes all markers in the array by removing references to them.
                            function deleteMarkers() {
                                clearMarkers();
                                markers = [];
                            }

                            google.maps.event.addDomListener(window, 'load', init_map);
                        </script>
                    </div>
                </div>

                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  margin-top">
                	<div class="col-lg-12 no-padding">
                    	<label>ELEGIR UNA IMAGEN</label>
                        <i class="fa fa-info-circle fa-lg" aria-hidden="true" data-toggle="tooltip" title="Selecciona buenas imágenes para ayudar a ver en detalle tu publicación. ¡La referencia visual es muy importante!"></i>
                        <!--<div class="col-lg-12 no-padding" >-->
                        @*(<a href="javascript:AgregarFileUploader();">Agregar imagen</a>)*@
                        <!--</div>-->

                    </div>

                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 no-padding margin-top">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                          <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 135px; height: 135px;cursor: pointer;"></div>
                          <div>
                            <span class="btn btn-default btn-file" style="display:none">
                                <span class="fileinput-new">Select image</span>
                                <span class="fileinput-exists">Change</span>
                                <!--<input type="file" name="...">-->
                                @Html.TextBox("ImageUpload", String.Empty, new { type = "file", onchange = "javascript:VerificarImagen(this);" })
                            
                                
                            </span>
                              @Html.ValidationMessage("ImageUpload")
                            <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Borrar</a>
                          </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 no-padding margin-top" >
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                          <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 135px; height: 135px;cursor: pointer;"></div>
                          <div>
                            <span class="btn btn-default btn-file" style="display:none"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span>
                                <!--<input type="file" name="...">-->
                                @Html.TextBox("ImageUpload", String.Empty, new { type = "file", onchange = "javascript:VerificarImagen(this);" })
                            
                                
                            </span>
                            <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Borrar</a>
                          </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 no-padding margin-top" id="DIVSubirFotos" >
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                          <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 135px; height: 135px;cursor: pointer;"></div>
                          <div>
                            <span class="btn btn-default btn-file" style="display:none"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span>
                                <!--<input type="file" name="...">-->
                                @Html.TextBox("ImageUpload", String.Empty, new { type = "file", onchange = "javascript:VerificarImagen(this);" })
                            
                                
                            </span>
                            <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Borrar</a>
                          </div>
                        </div>
                    </div>
                    

                    <!--
                    <div class="col-lg-4 no-padding">
                        <input type="file" />
                        <img src width="135px" height="135px" style="margin-right:15px;border-style:dashed;border-width:thin;border-color:#F1F1F1" />
                    </div>
                    <div class="col-lg-4 no-padding">
                        <input type="file" />
                        <img src width="135px" height="135px" style="margin-right:15px;border-style:dashed;border-width:thin;border-color:#F1F1F1""/>
                    </div>
                    <div class="col-lg-4 no-padding">
                        <input type="file" />
                        <img src width="135px" height="135px" style="margin-right:15px;border-style:dashed;border-width:thin;border-color:#F1F1F1""/>
                    </div>-->
                </div>                
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top">
                    <input type="submit" value="Publicar" class="le-button"/>
                </div>
            }
        </div>
     </div>
     
     
	</div>

   
<!-- END BODY REAL -->

