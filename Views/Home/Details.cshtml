@model MvcApplication4.Models.Productos

@{
    ViewBag.Title = "Details";
    //Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function CambioFecha(fecha)
    {
        d1 = new Date(document.getElementById('FechaDesde').value);
        d2 = new Date(document.getElementById('FechaHasta').value);
        if (d1 > d2)
        {
            alert("La fecha desde debe ser menor o igual a la fecha hasta!");
            fecha.value = ""
            return false;
        }
        return true;
    }

    function ValidarFechas()
    {
        d1 = document.getElementById('FechaDesde').value;
        d2 = document.getElementById('FechaHasta').value;
        if (d1 == "" || d2 == "")
        {
            alert("Las fechas seleccionadas no son correctas!");
            return false;
        }

        var u1 = @ViewBag.IdUsuarioLogueado;
        var u2 = @ViewBag.IdUsuarioProducto;
        
        if(u1 == u2)
        {
            alert("No puedes enviarte una solicitud a ti mismo");
            return false;
        }

        //ohSnap('Tu solicitud ha sido enviada correctamente!', 'green');

        return true;
    }

    function ValidarConsulta()
    {
        @*var u1 = @HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Convert.ToString(ViewBag.IdUsuarioLogueado)));
        var u2 = @HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Convert.ToString(ViewBag.IdUsuarioProducto)));
        
        if(u1 == u2)
        {
            alert("No puedes enviarte una consulta a ti mismo");
            return false;
        }*@

        //ohSnap('Tu consulta ha sido enviada correctamente!', 'green');

        return true;
    }

    function onSuccess(result)
    {
        if(result.url)
        {
            window.location.href = result.url;
        }
        alert("onSuccess()");
    }
    function onFailure(result)
    {
        alert("onFailure()");
    }

    @{
        string msjConsulta = TempData["msjConsulta"] as string;
        string msjSolicitud = TempData["msjSolicitud"] as string;
        
    } 

    if ('@msjConsulta' != "") {
        alertCustom('@msjConsulta');
    }

    if ('@msjSolicitud' != "") {
        alertCustom('@msjSolicitud');
    }

    function alertCustom(msg) {
        msgHTML = '<div class="row"><div id="Info"><div class="alert alert-success fade in"><a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a><strong>¡Felicitaciones! </strong>' + msg + '</div></div></div>';

        document.getElementById("info-alert").innerHTML = msgHTML;

        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4000);
    }

</script>

<script type="text/javascript">
    var idprod = '@HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Convert.ToString(Model.IdProducto)))';
    document.body.onload = ga('send', 'event', 'load', 'OnLoadDetails', 'Se visito el articulo: ' + idprod); //alert("OnLoad HOME.");
</script>
   
  <!-- Google Tag Manager -->
    <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TWFS7T"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <script>(function (w, d, s, l, i) {
    w[l] = w[l] || []; w[l].push({
        'gtm.start':
        new Date().getTime(), event: 'gtm.js'
    }); var f = d.getElementsByTagName(s)[0],
    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
    '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-TWFS7T');</script>
    <!-- End Google Tag Manager -->

<!-- BEGIN BODY REAL -->
    <div class="container" >        
        <div class="row">
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
        	Categoria: @Model.CategoriasProducto.DescripcionI1
            </div>
        </div>
     <div class="row margin-top">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="product-detail-title">
                @Model.Nombre
            </div>
        </div>
     	<div class="col-lg-5 col-md-8 col-sm-8 col-xs-12">
        	
            
            <!-- BEGIN FOTOS -->
            
            <div class="no-margin col-lg-12 col-xs-12 col-sm-12 col-md-12 gallery-holder no-padding">
                <div class="product-item-holder size-big single-product-gallery small-gallery">
            

                     <div id="owl-single-product">
            
                            @if (Model.FotosProductos.Count() > 0)
                            {
                                int i = 0;
                                foreach (var f in Model.FotosProductos.ToList())
                                {
                                    i = i + 1;
                                    string slide = "slide" + i.ToString();
                                    <div class="single-product-gallery-item" id="@slide">
                                        <a data-rel="prettyphoto" href="@Url.Content(f.Imagen.RutaFoto.Replace("../../", ""))">
                                            <img class="img-responsive" alt="" style="background-image: url('@Url.Content(f.Imagen.RutaFoto.Replace("../../", ""))');"  data-echo="@Url.Content(f.Imagen.RutaFoto.Replace("../../", ""))" />
                                        </a>
                                    </div><!-- /.single-product-gallery-item -->
                                }
                            }
            
            
                    </div><!-- /.single-product-slider -->


            
                    <div class="single-product-gallery-thumbs gallery-thumbs">
            

                        <div id="owl-single-product-thumbnails">

                                
                                @if (Model.FotosProductos.Count() > 0)
                                {
                                    int j = 0;
                                    foreach (var f2 in Model.FotosProductos.ToList())
                                    {
                                        j = j + 1;
                                        string slide = "#slide" + j.ToString();
                                        int h = j - 1;
                                        <a class="horizontal-thumb active" data-target="#owl-single-product" data-slide="@h" href="@slide">
                                            @if (String.IsNullOrEmpty(f2.Imagen.RutaFotoThumb))
                                            {
                                                <img  alt="" style="background-image: url('@Url.Content(f2.Imagen.RutaFoto.Replace("../../", ""))');background-size: contain;background-position: center;background-repeat: no-repeat;width:110px;height:110px;"  data-echo="@Url.Content(f2.Imagen.RutaFoto.Replace("../../", ""))" />
                                            }
                                            else
                                            {
                                                <img alt="" style="background-image: url('@Url.Content(f2.Imagen.RutaFotoThumb.Replace("../../", ""))');background-size: contain;background-position: center;background-repeat: no-repeat;width:110px;height:110px;"  data-echo="@Url.Content(f2.Imagen.RutaFotoThumb.Replace("../../", ""))" />
                                            }
                                
                                        </a>
                                    }
                                }
                
                

                        </div><!-- /#owl-single-product-thumbnails -->
                       
                        <div class="nav-holder text-left">
                            <a class="prev-btn slider-prev" data-target="#owl-single-product-thumbnails" href="#prev"></a>
                        </div><!-- /.nav-holder -->
                        
                        <div class="nav-holder text-right">
                            <a class="next-btn slider-next" data-target="#owl-single-product-thumbnails" href="#next"></a>
                        </div><!-- /.nav-holder -->
            
                    </div><!-- /.gallery-thumbs -->
            
                </div><!-- /.single-product-gallery -->
            </div>
            <!-- END FOTOS -->
            
            
            
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 product-detail">
            <div>
                @*<div class="product-detail-title">
                    @Model.Nombre
                </div>*@
               @* <div class="product-detail-star">
                    estrellas
                </div>*@
                <div class="product-detail-prices">
                    <div class="row">
                        <div class="product-detail-pricetype col-lg-6 no-padding">Hora</div>
                        <div class="product-detail-price col-lg-6 no-padding text-right">
                            @if (Model.PrecioHora != null)
                            {
                               
                                string precioHoraMostrar = Model.Moneda.Simbolo + " " + Model.PrecioHora; 
                                 
                                 
                                @precioHoraMostrar
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="product-detail-pricetype col-lg-6 no-padding">Diario</div>
                        <div class="product-detail-price col-lg-6 no-padding text-right">
                            @if (Model.PrecioDiario != null)
                            {
                                
                                string precioDiarioMostrar = Model.Moneda.Simbolo + " " + Model.PrecioDiario; 
                                 
                                 
                                @precioDiarioMostrar
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="product-detail-pricetype col-lg-6 no-padding">Semana</div>
                        <div class="product-detail-price col-lg-6 no-padding text-right">
                            @if (Model.PrecioSemanal != null)
                            {
                                 string precioSemanalMostrar = Model.Moneda.Simbolo + " " + Model.PrecioSemanal; 
                                 
                                 
                                @precioSemanalMostrar

                                
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="product-detail-pricetype col-lg-6 no-padding">Fin de semana</div>
                        <div class="product-detail-price col-lg-6 no-padding text-right">
                            @if (Model.PrecioFinDeSemana != null)
                            {
                                string precioFindeMostrar = Model.Moneda.Simbolo + " " + Model.PrecioFinDeSemana; 
                                 
                                 
                                @precioFindeMostrar

                                
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="product-detail-pricetype col-lg-6 no-padding">Mes</div>
                        <div class="product-detail-price col-lg-6 no-padding text-right">
                            @if (Model.PrecioMensual != null)
                            {
                                string precioMensualMostrar = Model.Moneda.Simbolo + " " + Model.PrecioMensual; 
                                 
                                 
                                @precioMensualMostrar

                                 //Model.Moneda.Simbolo @Model.PrecioMensual
                            }
                        </div>
                    </div>
                </div>
                <hr>
                 <div class="product-detail-reserva">
                    @using (Html.BeginForm("AlquilarFechas", "Home", FormMethod.Post, new { novalidate = "novalidate" }))
                    {
                        @Html.ValidationSummary(true)
                        @Html.Hidden("IdProductoEncrypt", HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdProducto.ToString())))

                         <div class="product-detail-dates">
                             <div class="row">
                                <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 no-padding">
                                    @Html.Label("FechaDesde", "Desde el")
                                    @Html.TextBox("FechaDesde", null, new { type = "date", @class = "le-input", onchange = "javascript:CambioFecha(this);" })
                                    @Html.ValidationMessage("FechaDesde")
                                </div>
                                <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 no-padding">
                                    @Html.Label("FechaHasta", "Hasta el")
                                    @Html.TextBox("FechaHasta", null, new { type = "date", @class = "le-input", onchange = "javascript:CambioFecha(this);" })
                                    @Html.ValidationMessage("FechaHasta")
                                </div>
                            </div>
                        </div>
                        <div>
                            <!--<input type="button" value="Reservar"  class="le-button margin-top"/>-->
                            <input type="submit" class="le-button margin-top" value="Reservar" onclick="javascript: return ValidarFechas();" />
                        </div>
                    }
                 </div>
                 <hr>
                @if(Request.IsAuthenticated)
                {
                 <div class="product-detail-consulta">
                    @using (Html.BeginForm("Consultar", "Home", FormMethod.Post, new { novalidate = "novalidate" }))
                    {
                        @Html.Hidden("IdProductoEncrypt", HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdProducto.ToString())))

                        @Html.Hidden("IdUsuarioEncrypt", HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(Model.IdUsuario.ToString())))

                        <div class="product-detail-dates">
                            <label>Consulta</label>
                            @Html.TextArea("Comentario", null, new { @class = "le-input", rows="4" })
                            @Html.ValidationMessage("Comentario")                        
                        </div>
                        <div>
                            
                            <input type="submit" class="le-button margin-top-bottom" value="Enviar Consulta" onclick="javascript: return ValidarConsulta();" />
                
                        </div>
                    }
                 </div>
                }
                else
                {
                    <div class="product-detail-consulta">
                        <div class="product-detail-dates">
                            <label>Consulta</label>
                            <p>Para realizar una consulta es necesario iniciar sesión.</p>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-lg-3 col-md-12 col-sm-12 col-xs-12">
        	<div class="product-right">
                <div class="product-user">
                    <div class="row"> 
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
                            <div class="product-user-image">
                        
                                @if (Model.Usuario.FotosUsuarios.Count() > 0)
                                {
                                    if (String.IsNullOrEmpty(Model.Usuario.FotosUsuarios.First().Imagen.RutaFotoThumb))
                                    {
                                        <img style="background-image:url('@Url.Content(Model.Usuario.FotosUsuarios.FirstOrDefault().Imagen.RutaFoto)')" />
                                    }
                                    else
                                    {
                                        <img style="background-image:url('@Url.Content(Model.Usuario.FotosUsuarios.FirstOrDefault().Imagen.RutaFotoThumb)')" />
                                    }
                            
                                }
                                else
                                {
                                    <img style="background-image:url('@Url.Content("~/assets/images/default-avatar.jpg")')" />
                                }
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
                            <div class="product-user-info">
                                <div class="product-user-info-name margin-top">
                                    @Model.Usuario.Nombre
                                </div> <!-- BARRIO -->
                        
                                <div class="product-user-info-contact margin-top">
                                    
                                    <p>@if (@Model.Usuario.Barrio != null)
                                           {@Model.Usuario.Barrio.DescripcionI1}
                                    </p>
                                    @if (@Model.Usuario.Ciudad != null)
                                    {
                                        <p>(
                                            @Model.Usuario.Ciudad.DescripcionI1
                                        )</p>
                                    }
                                    @*<input type="button" value="Contacto" class="le-button" />*@ <!--TEMPLATE -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="product-map"> <!-- mapa del producto o mapa del usuario????? -->   
                    @Html.Hidden("Ubicacion", Model.Ubicacion)
                             
                    <script src='https://maps.googleapis.com/maps/api/js?v=3.exp'></script>
                    <div style='overflow:hidden;height:150px;width:100%;'>
                        <div id='gmap_canvas' style='height:150px;width:100%;'>
                        </div>
                        <div>
                            <small>
                                <a href="http://embedgooglemaps.com">									embed google maps							</a>
                            </small>
                        </div>
                        <div>
                            <small>
                                <a href="http://www.proxysitereviews.com/">proxies</a>
                            </small>
                        </div>
                        <style>#gmap_canvas img{max-width:none!important;background:none!important}</style>
                    </div>
                    <script type='text/javascript'>
                        var map;
                        var markers = [];

                        function init_map() {
                            /*
                            alert(document.getElementById('Ubicacion').value);
                            alert($('#Ubicacion').val());
                            */
                            var geocoder = new google.maps.Geocoder();

                            //map.setOptions({draggable: false, zoomControl: false, scrollwheel: false, disableDoubleClickZoom: true});

                            var myOptions = {
                                zoom: 10,
                                zoomControl: true,
                                draggable: true,
                                disableDoubleClickZoom: true,
                                center: new google.maps.LatLng(-34.8484076, -56.24250030000002),
                                mapTypeId: google.maps.MapTypeId.ROADMAP
                            };
                            map = new google.maps.Map(document.getElementById('gmap_canvas'), myOptions);

                            //deleteMarkers();
                            
                            var address = $('#Ubicacion').val(); //"Montevideo, Uruguay";

                            if (address == "")
                            {
                                address = "Montevideo, Uruguay";
                            }

                            geocoder.geocode({ 'address': address }, function (results, status) {
                                if (status == google.maps.GeocoderStatus.OK) {
                                    if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                        map.setCenter(results[0].geometry.location);

                                        var infowindow = new google.maps.InfoWindow(
                                            {
                                                content: '<b>' + address + '</b>',
                                                size: new google.maps.Size(150, 50)
                                            });

                                        var marker = new google.maps.Marker({
                                            position: results[0].geometry.location,
                                            map: map,
                                            title: address
                                        });
                                        markers.push(marker);
                                        google.maps.event.addListener(marker, 'click', function () {
                                            infowindow.open(map, marker);
                                        });
                                        infowindow.open(map, marker);

                                    } else {
                                        alert("¡No se pudo encontrar la ubicación ingresada!");
                                    }
                                } else {
                                    alert("¡No se pudo encontrar la ubicación ingresada!");
                                    /*Geocode was not successful for the following reason: " + status*/
                                }
                            });

                            /*
                            marker = new google.maps.Marker({ map: map, position: new google.maps.LatLng(-34.8484076, -56.24250030000002) });
                            infowindow = new google.maps.InfoWindow({content:'<strong>Mario</strong><br>Cordobes 329, Montevideo, Uruguay<br>'});
                            google.maps.event.addListener(marker, 'click', function(){
                                infowindow.open(map,marker);
                            });
                            infowindow.open(map,marker);*/
                        }

                        function ActualizarMapa() {
                            deleteMarkers();

                            var geocoder = new google.maps.Geocoder();

                            var address = document.getElementById('Ubicacion').value; //"Cerro, Montevideo, Uruguay";//document.getElementById('txtBuscar').value;

                            if (address != "") {
                                geocoder.geocode({ 'address': address }, function (results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {
                                        if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                            map.setCenter(results[0].geometry.location);

                                            var infowindow = new google.maps.InfoWindow(
                                                {
                                                    content: '<b>' + address + '</b>',
                                                    size: new google.maps.Size(150, 50)
                                                });

                                            var marker = new google.maps.Marker({
                                                position: results[0].geometry.location,
                                                map: map,
                                                title: address
                                            });
                                            markers.push(marker);
                                            google.maps.event.addListener(marker, 'click', function () {
                                                infowindow.open(map, marker);
                                            });
                                            infowindow.open(map, marker);

                                        } else {
                                            alert("No results found");
                                        }
                                    } else {
                                        alert("Geocode was not successful for the following reason: " + status);
                                    }
                                });
                            }
                        }

                        // Sets the map on all markers in the array.
                        function setMapOnAll(map) {
                            for (var i = 0; i < markers.length; i++) {
                                    markers[i].setMap(map);
                            }
                        }

                        // Removes the markers from the map, but keeps them in the array.
                        function clearMarkers() {
                            setMapOnAll(null);
                        }

                        // Shows any markers currently in the array.
                        function showMarkers() {
                            setMapOnAll(map);
                        }

                        // Deletes all markers in the array by removing references to them.
                        function deleteMarkers() {
                            clearMarkers();
                            markers = [];
                        }

                        google.maps.event.addDomListener(window, 'load', init_map);

                        //addEventListener(document.getElementById('Ubicacion'), 'load', init_map /*ActualizarMapa()*/);
                        //ActualizarMapa();
                        </script>
                </div>
			</div>
            @*<div class="product-help">
            	<div class="product-help-title">SERVICIO 24 Hs</div>
            	<div class="product-help-body">Necesitas ayuda?</div>
                <div class="product-help-body">Llamanos! Tel: 2600 12 12</div>
            	<div class="product-help-button margin-top"><input type="button" value="Preguntas frecuentes" class="le-button" /></div>                                
            </div>*@
        </div>
     </div>
     
     <div class="row">
         <div class="product-detail-bottom">
             <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                 <div class="product-detail-tabholder">
                    <ul class="nav nav-tabs">
                    	<li class="active">
                        	<a href="#descripcion" data-toggle="tab">Descripci&oacute;n</a>
                        </li>
                        <li>
                        	<a href="#garantia" data-toggle="tab">Garant&iacute;a</a>
                        </li>
                        <li>
                        	<a href="#entrega" data-toggle="tab">Entrega / Recog&iacute;da</a>
                        </li>
                       @* <li>
                        	<a href="#comentarios" data-toggle="tab">Comentarios</a>
                        </li>*@
                    </ul>
                    <div class="tab-content">
                        
                        <div class="tab-pane fade-in active" id="descripcion">
                            <div class="row">
                                <div class="col-lg-12 margin-top">
                                    <p>@Model.Descripcion</p>
                                </div>
                            </div>
                            
                        </div><!-- /.tab-pane #additional-info -->
                        
                        <div class="tab-pane fade" id="garantia">
                            <ul class="margin-top">
                                <li>
                                    <p>
                                    <strong>Dep&oacute;sito de garant&iacute;a: </strong>
                                    @Model.Moneda.Simbolo @Model.GarantiaDinero
                                     </p>
                                </li>
                                <li>
                                    <p>
                                    <strong>Requisitos: </strong>
                                    @Model.GarantiaExtra
                                    </p>
                                </li>
                                <li>
                                    <p>
                                    <strong>Condiciones de uso: </strong>
                                    @Model.CondicionesUso
                                    </p>
                                </li>
                            </ul><!-- /.tabled-data -->
                        </div><!-- /.tab-pane #additional-info -->
                        
                        <div class="tab-pane fade" id="entrega">
                            <ul class="margin-top">
                                <li>
                                    <p>
                                    <strong>Opcion de entrega / recogida: </strong>
                                        @{string opcionEntrega = "";}
                                        @switch (Model.OpcionEntrega)
                                        {
                                            case 1:
                                                opcionEntrega = "Te lo puedo enviar";
                                                break;
                                            case 2:
                                                opcionEntrega = "Lo recoges en mi casa";
                                                break;
                                            case 3:
                                                opcionEntrega = "Quedamos en un sitio publico";
                                                break;
                                        }
                                        @opcionEntrega
                                     </p>
                                </li>
                                
                            </ul><!-- /.tabled-data -->
                        </div><!-- /.tab-pane #additional-info -->

                    </div>
                </div>
                <div class="product-detail-carrusel-horizontal margin-top">

                    <section id="recently-reviewd" class="wow fadeInUp">
                        <div class="">
                            <div class="carousel-holder hover">
                        
                                <div class="title-nav">
                                    <h2 class="h2">M&aacute;s publicaciones</h2>
                                    <div class="nav-holder">
                                        <a href="#prev" data-target="#owl-recently-viewed-2" class="slider-prev btn-prev fa fa-angle-left"></a>
                                        <a href="#next" data-target="#owl-recently-viewed-2" class="slider-next btn-next fa fa-angle-right"></a>
                                    </div>
                                </div><!-- /.title-nav -->
            
                                <div id="owl-recently-viewed-2" class="owl-carousel product-grid-holder">
                                    @foreach (MvcApplication4.Models.Productos p in (List<MvcApplication4.Models.Productos>)ViewBag.ProductosRandom)
                                    {
                                        
                                            
                                        <a href="@Url.Content("~/Home/Details/" + HttpUtility.UrlEncode(MvcApplication4.Controllers.Funciones.Encrypt(p.IdProducto.ToString()))).ToString().Replace("%", "%25")">
                                            <div class="no-margin carousel-item product-item-holder size-small hover" >
                                                <div class="product-item">

                                                    @{ decimal? precioMostrar = 0;
                                           string modalidadMostrar = "";

                                           if (p.MostrarPrecioDiario)
                                           {
                                               precioMostrar = p.PrecioDiario;
                                               modalidadMostrar = "día"; 
                                           }

                                           if (p.MostrarPrecioFinDeSemana)
                                           {
                                               precioMostrar = p.PrecioFinDeSemana;
                                               modalidadMostrar = "finde";
                                           }

                                           if (p.MostrarPrecioHora)
                                           {
                                               precioMostrar = p.PrecioHora;
                                               modalidadMostrar = "hora";
                                           }

                                           if (p.MostrarPrecioMensual)
                                           {
                                               precioMostrar = p.PrecioMensual;
                                               modalidadMostrar = "mes";
                                           }

                                           if (p.MostrarPrecioSemanal)
                                           {
                                               precioMostrar = p.PrecioSemanal;
                                               modalidadMostrar = "sem";
                                           }   
                                            }
                                        

                                                    @if (p.FotosProductos.Count() > 0)
                                                    {
                                                        if (String.IsNullOrEmpty(p.FotosProductos.First().Imagen.RutaFotoThumb))
                                                        {
                                                            <div class="image" style="background-image:url('@Url.Content(p.FotosProductos.First().Imagen.RutaFoto.Replace("../../", ""))')">
                                                                <div class="prices">        
                                                                    <div class="price-current pull-left">@p.Moneda.Simbolo @Convert.ToInt32(precioMostrar) / @modalidadMostrar</div><br/>
                                                                </div>
                                               
                                                            </div>
                                        
                                                        }
                                                        else
                                                        {
                                                            <div class="image" style="background-image:url('@Url.Content(p.FotosProductos.First().Imagen.RutaFotoThumb.Replace("../../", ""))')">
                                                                <div class="prices">        
                                                                    <div class="price-current pull-left">@p.Moneda.Simbolo @Convert.ToInt32(precioMostrar) / @modalidadMostrar</div><br/>
                                                                </div>
                                               
                                                            </div>
                                             
                                                        }

                                                    }
                                                    else
                                                    {
                                                         <div class="image" style="background-image:url('@Url.Content("~/assets/images/product-small-01.jpg")')">
                                                                <div class="prices">        
                                                                    <div class="price-current pull-left">@p.Moneda.Simbolo @Convert.ToInt32(precioMostrar) / @modalidadMostrar</div><br/>
                                                                </div>
                                               
                                                            </div>
                                             
                                                    }
                                            
                                                    @*<div class="star">
                                                    </div>*@
                                                    <div class="info">
                                            	
                                                        <div class="user">
                                                                                                
                                                            @if (p.Usuario.FotosUsuarios.Count() > 0)
                                                                {
                                                                    if (String.IsNullOrEmpty(p.Usuario.FotosUsuarios.First().Imagen.RutaFotoThumb))
                                                                    {
                                                                        <div class="user-image" title="@p.Usuario.Nombre" style="background-image:url('@Url.Content(p.Usuario.FotosUsuarios.First().Imagen.RutaFoto.Replace("../../", ""))')">
                                                                        </div>
                                                            
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="user-image" title="@p.Usuario.Nombre" style="background-image:url('@Url.Content(p.Usuario.FotosUsuarios.First().Imagen.RutaFotoThumb.Replace("../../", ""))')">
                                                                        </div>
                                                            
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    <div class="user-image" style="background-image:url('@Url.Content("~/assets/images/default-avatar.jpg")')">
                                                                    </div>
                                                        
                                                                }

                                                            <div class="user-info">
                                                
                                                        <div class="body">
                                                                <div class="title">
                                                        
                                                                    @{ string titulo = "";}
                                                                    @if (p.Nombre.Length > 10) 
                                                                    {
                                                                        titulo = p.Nombre.Substring(0,10) + "...";
                                                                    }
                                                                    else
                                                                    {
                                                                        titulo = p.Nombre;
                                                                    }
                                                                    @titulo
                                                                </div>
                                                        </div>
                                                    
                                                                @*<div class="user-info-name">@p.Usuario.Nombre</div>*@
                                                                <div class="user-info-barrio">@if(p.Usuario.Barrio != null){@p.Usuario.Barrio.DescripcionI1} - @if(p.Usuario.Ciudad != null){@p.Usuario.Ciudad.DescripcionI1}</div>
                                                                @*<div class="user-info-city">@if(p.Usuario.Ciudad != null){@p.Usuario.Ciudad.DescripcionI1}</div>*@
                                                            </div>
    
                                                            <!-- <div class="user-star">
                                                            </div>-->
                                                        </div>
                                                    </div>
                                                </div><!-- /.product-item -->
                                            </div><!-- /.product-item-holder -->
                                        </a>
                                    }    
                                </div><!-- /#recently-carousel -->
            
                            </div><!-- /.carousel-holder -->
                        </div><!-- /.container -->
                    </section><!-- /#recently-reviewd -->

                </div>
            </div>
            
         </div>
	</div>
 </div>
   
<!-- END BODY REAL -->
